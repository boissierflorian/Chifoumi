#ifndef RANDOM_HPP_
#define RANDOM_HPP_

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <random>

////////////////////////////////////////////////////////////
// Générateur de nombre aléatoire
////////////////////////////////////////////////////////////
class Random
{
public:

  ////////////////////////////////////////////////////////////
  // \brief Constructeur par défaut
  //
  ////////////////////////////////////////////////////////////
  Random();

  ////////////////////////////////////////////////////////////
  // \brief Constructeur par copie interdit.*
  // Pour éviter les suites pseudo-aléatoires identiques.
  ////////////////////////////////////////////////////////////
  Random(const Random &) = delete;

  ////////////////////////////////////////////////////////////
  // \brief Génère un nombre aléatoire réel dans [0,1).
  //
  ////////////////////////////////////////////////////////////
  double operator()();

  ////////////////////////////////////////////////////////////
  // \brief Génère un nombre aléatoire entier dans [0,n).
  //
  ////////////////////////////////////////////////////////////
  int operator()(int n);
private:
  
  //////////////////////////////////////////////////////////
  // Data members
  //////////////////////////////////////////////////////////
  std::mt19937_64 _engine;
  std::uniform_real_distribution<double> _distribution;
};

#endif

////////////////////////////////////////////////////////////
// Exemple d'utilisation :
// Random rng;
// int x = rng(42);
// double y = rng();
////////////////////////////////////////////////////////////
